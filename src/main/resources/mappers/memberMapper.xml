<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.board.mapper.MemberMapper">

<!-- 사용자 정보 등록 -->
<insert id="memberInfoRegistry" parameterType="com.board.dto.MemberVO">

insert into tbl_member (userid,username,password,telno,email,regdate,
	role,org_filename,stored_filename,filesize,zipcode,address,lastpwdate,pwcheck)  
	values (#{userid},#{username},#{password},#{telno},#{email},sysdate,'USER',
	#{org_filename},#{stored_filename},#{filesize},#{zipcode},#{address},
	sysdate,1)

</insert>

<!-- ID 확인 -->
<select id="idCheck" parameterType="string" resultType="int">
	select count(*) from tbl_member where userid = #{userid}
</select>

<!-- 마지막 로그인 날짜 등록 -->	
<insert id="logindateUpdate" parameterType="string">
	insert into tbl_member_log (userid,inouttime,status) values (#{userid},sysdate,'IN')
</insert>

<!-- 로그인 시 필요한 정보 가져 오기-->
<select id="login" parameterType="string" resultType="com.board.dto.MemberVO">
    select userid, username, password, role from tbl_member where userid = #{userid}
</select>

<!-- welcome 페이지에서 볼 정보 가져 오기-->
<select id="welcomeView" parameterType="string" resultType="com.board.dto.MemberVO">
select (select to_char(max(inouttime),'YYYY-MM-DD HH24:MI:SS') from tbl_member_log where userid=#{userid} and status='IN') as lastlogindate,
    (select to_char(max(inouttime),'YYYY-MM-DD HH24:MI:SS') from tbl_member_log where userid=#{userid} and status='OUT') as lastlogoutdate,
    (select to_char(regdate,'YYYY-MM-DD HH24:MI:SS') from tbl_member where userid=#{userid}) as regdate from dual
</select>

<!-- 로그아웃 날짜 등록 -->
<insert id="logoutUpdate" parameterType="string">
	insert into tbl_member_log (userid,inouttime,status) values(#{userid},sysdate,'OUT')
</insert>

<!-- 사용자 정보 보기 -->
<select id="memberInfoView" parameterType="string" resultType="com.board.dto.MemberVO">
	select userid, username, password, telno, email, role, stored_filename, zipcode, address, pwcheck, 
	to_char(lastpwdate,'YYYY-MM-DD HH24:MI:SS') as lastpwdate, 
	to_char(regdate,'YYYY-MM-DD HH24:MI:SS') as regdate from tbl_member where userid = #{userid}
</select>

<!-- 우편번호 행 최대 갯수 계산 -->
<select id="addrTotalCount" parameterType="string" resultType="int">
	select count(*) from tbl_addr where road like '%'||#{addSearch}||'%'
		or building like '%'||#{addrSearch}||'%'
</select>

<!-- 우편번호 검색 -->
<select id="addrSearch" parameterType="java.util.HashMap" resultType="com.board.dto.AddressVO">

	select zipcode, province, road, building, oldaddr from 
	(select zipcode, province, road, building, oldaddr, row_number() over(order by zipcode) as rnum  
	from tbl_addr where road like '%'||#{addrSearch}||'%' 
	or building like '%'||#{addrSearch}||'%') addr 
	where rnum between #{startPoint} and #{endPoint} order by zipcode

</select>

<!--사용자 정보 수정 -->
<update id="memberInfoUpdate" parameterType="com.board.dto.MemberVO">
	update tbl_member set telno=#{telno}, email=#{email}, org_filename=#{org_filename},
		   stored_filename=#{stored_filename}, filesize=#{filesize}
	where userid = #{userid}
</update>

<!-- 아이디 찾기 -->
<select id="idSearch" parameterType="com.board.dto.MemberVO" resultType="String">
	select userid from TBL_MEMBER where username = #{username} and telno = #{telno}  
</select>

<!-- 비밀번호 찾기 -->
<select id="pwSearch" parameterType="com.board.dto.MemberVO" resultType="boolean">
	SELECT  case when COUNT(*) >=1 then 1 else 0 end as isExisted
  	FROM    tbl_member
  	WHERE    username = #{username} and userid=#{userid} 
</select>

<!-- 비밀번호 변경 -->
<update id="pwModify" parameterType="com.board.dto.MemberVO">
	update tbl_member set password=#{password}, pwcheck = #{pwcheck}+1, LASTPWDATE = sysdate where userid = #{userid}
</update>

<!-- 회원 탈퇴 -->
<delete id="deleteUser" parameterType="string">
	delete from tbl_member where userid = #{userid}
</delete>

<!-- 유저 게시판 업로드 파일  -->
<select id="userBoardFileno" parameterType="string" resultType="com.board.dto.FileVO">
	select * from tbl_file where userid = #{userid}
</select>

<!-- 유저 프로필 사진 삭제  -->
<select id="userProfileno" parameterType="string" resultType="com.board.dto.MemberVO">
	select stored_filename,org_filename from tbl_member where userid = #{userid}
</select>

</mapper>